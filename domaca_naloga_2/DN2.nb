
   5. domača naloga

1.                                                                                                                                                                                         
V Mathematici predstavimo daljico v obliki Daljica[AA_, BB_], kjer sta AA in BB točki predstavljeni s parom koordinat v obliki {x, y}. Primer: 
d = Daljica[{-1, 1}, {3, -1}]

Sestavi naslednje funkcije:

	\[Bullet]Dolzina[Daljica[AA_, BB_]], ki vrne dolžino daljice.

	\[Bullet]EnacbaNosilke[Daljica[AA_, BB_]], ki vrne enačbo premice nosilke daljice. Primer, za daljico
	d kot zgoraj je enačba nosilke y == -x/2 + 1/2.

	\[Bullet]Slika[Daljica[AA_, BB_]], ki vrne grafični objekt Line, kateri predstavlja daljico.

	\[Bullet]Narisi[d__Daljica], ki za eno ali več podanih daljic le-te izriše

In[1]:= d = Daljica[{-1, 1}, {3, -1}];
d2 = Daljica[{-1, -1}, {3, 1}];
d3 = Daljica[{-1, 2}, {3, 0}];

In[4]:= Dolzina[Daljica[AA_, BB_]] := Norm[BB - AA]

In[5]:= Daljica[{-1,2},{3,0}]

Out[5]= Daljica[{-1, 2}, {3, 0}]

In[6]:= Dolzina[d]

Out[6]= 2 Sqrt[5]



In[7]:= Slika[Daljica[AA_, BB_]] := Line[{AA, BB}];

In[8]:= Slika[d]

Out[8]= Line[{{-1, 1}, {3, -1}}]

In[9]:= Narisi[d_Daljica] := Graphics[Slika[d]]
Narisi[d__Daljica] := Graphics[Map[Slika, List[d]]]

In[11]:= Narisi[d, d2, d3]

Out[11]= \!\(\*
GraphicsBox[{LineBox[{{-1, 1}, {3, -1}}], LineBox[{{-1, -1}, {3, 1}}], 
    LineBox[{{-1, 2}, {3, 0}}]}]\)

ClearAll[x, y]

In[12]:= EnacbaNosilke[Daljica[AA_, BB_]] := Module[{x1, y1, x2, y2, k, n},
  {x1, y1} = AA;
  {x2, y2} = BB;
  k = (y2 - y1)/(x2 - x1);
  n = n /. First[Solve[y1 == k*x1 + n, n]];
  y ==  k*x + n
  ]

In[13]:= EnacbaNosilke[d]

Out[13]= y == 1/2 - x/2

2.                                                                            \
                                                                              \
                                           

Sestavi funkcijo Presek[Daljica[AA_, BB_], Daljica[CC_, DD_]], ki vrne presečišče daljic, če
se sekata, oziroma prazen seznam ({}).

Presek[Daljica[AA_, BB_], Daljica[CC_, DD_]]




In[14]:= Presek[Daljica[AA_, BB_], Daljica[CC_, DD_]] := Module[{resitev},
  resitev = 
   Solve[{AA + r (BB - AA) == CC + s (DD - CC), r >= 0, r <= 1, s >= 0, 
     s <= 1}, {r, s}];
  If[resitev == {},
   {},
   First[AA + r (BB - AA) /. resitev]
   ]
  ]

In[15]:= Presek[d, d2]

Out[15]= {1, 0}

In[16]:= Presek[d, d3]

Out[16]= {}

3.                                                                                                                                         
Sklenjen mnogokotnik podamo v obliki seznama z glavo Mnogokotnik. Primer 

m1 = Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}] 

Ker gre za sklenjen mnogokotnik, predvidevamo, da ima ta povezave med zaporednimi točkami ter od
zadnje do prve točke. Sestavi naslednje funkcije:

	\[Bullet]Slika[Mnogokotnik[t__]], ki predstavi mnogokotnik s pomočjo grafičnega objekta Line. Naj-
	prej sestavi nov seznam točk, ki vključuje obstoječe točke mnogokotnika ter še ponovljeno prvo.
	Pozor: pazi, da ne izbrišeš obstoječe funkcije za sliko daljice!

	\[Bullet] Narisi[m__Mnogokotnik], ki nariše enega ali več mnogokotnikov. Pazi, pri risanju moraš narediti tudi daljico od zadnje do začetne točke. Premisli, kako iz obstoječega seznama točk sestaviš nov seznam, ki daljši za eno točko, t.j. ponovljeno prvo točko (Namig: funkciji Append 	ter First na seznamih.)

	\[Bullet]PravilniNKotnik[n_, r_], ki nariše pravilni n -kotnik s središčem v točki (0 , 0) in s točkami na krožnici z radijem r, pri čemer je ena točka v ( r, 0). Namig: uporabi funkcijo Table in upoštevaj, da se točke nahajajo na koordinatah ( r cos(( 2 \[Pi] * i)/ n), r sin(( 2 \[Pi] * i (/n ))) za i = 0 , . . . , n \[Minus] 1.Izriši 
p5 = PravilniNKotnik[5, 2]
	
	\[Bullet]Nadgradi prejšnjo funkcijo v PravilniNKotnik[n_, r_, phi_], ki zgornji pravilni n-kotnik zavrti za kot phi. Premisli, kako je treba nadgraditi formulo za posamezno točko, da se premakne za kot phi. Rezultat uporabi v kombinaciji s funkcijo Manipulate in interaktivno demonstriraj rotacijo.
	
	\[Bullet]Daljice[Mnogokotnik[t__]], ki vrne seznam daljic, ki tvorijo mnogokotnik. Uporabi funkcijo Partition. V dokumentaciji preveri, kako deluje funkcija ter kako se uporablja zamikanje. Oglej si, 	kaj naredita naslednja ukaza:
	Partition[{1, 2, 3, 4, 5} , 2]
	Partition[{1, 2, 3, 4, 5} , 2, 1]

In[17]:= m1 = Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}];

ClearAll [Slika, Narisi]

In[18]:= Slika[Mnogokotnik[t__]] := Line[{t}]

In[19]:= Slika[m1]

Out[19]= Line[{{0, 0}, {1, 1}, {0, 3}, {-1, 2}}]

In[20]:= m = Append[m1, m1[[1]]];
Narisi[m__Mnogokotnik] := Graphics[Map[Slika, List[m]]]

In[22]:= Narisi[m]

Out[22]= \!\(\*
GraphicsBox[LineBox[{{0, 0}, {1, 1}, {0, 3}, {-1, 2}, {0, 0}}]]\)

ClearAll[PravilniNKotnik, Narisi, i, n, r, p5]

In[23]:= p5 = PravilniNKotnik[5, 2];

In[24]:= Narisi[p5__PravilniNKotnik] := Graphics[{
   	Line[
    		Table[{p5[[2]] * Cos[(2*Pi * i) / p5[[1]]],
      		p5[[2]] * Sin[(2*Pi * i) / p5[[1]]]}, {i, 0, p5[[1]]}]]}]

Narisi[p5]

\!\(\*
GraphicsBox[
   LineBox[NCache[{{2, 0}, {
      Rational[1, 2] (-1 + 5^Rational[1, 2]), 
       2 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (-1 - 5^Rational[1, 2]), 
       2 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^Rational[
         1, 2]}, {Rational[
        1, 2] (-1 - 5^Rational[1, 2]), (-2) (
         Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 2] (-1 + 5^Rational[1, 2]), (-2) (
         Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      2, 0}}, {{2, 0}, {0.6180339887498949, 
      1.902113032590307}, {-1.618033988749895, 
      1.1755705045849463`}, {-1.618033988749895, -1.1755705045849463`}, {
      0.6180339887498949, -1.902113032590307}, {2, 0}}]]]\)

In[25]:= PravilniNKotnik[n_, r_] := 
 Graphics[{Line[Table[{r*Cos[(2 Pi*i)/n], r*Sin[(2 Pi*i)/n]}, {i, 0, n}]], 
   Point[{0, 0}]}]
p5 = PravilniNKotnik[5, 2]

Out[26]= \!\(\*
GraphicsBox[{
    LineBox[NCache[{{2, 0}, {
       Rational[1, 2] (-1 + 5^Rational[1, 2]), 
        2 (Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[
          1, 2]}, {Rational[1, 2] (-1 - 5^Rational[1, 2]), 
        2 (Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^Rational[
          1, 2]}, {Rational[
         1, 2] (-1 - 5^Rational[1, 2]), (-2) (
          Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^Rational[
          1, 2]}, {Rational[
         1, 2] (-1 + 5^Rational[1, 2]), (-2) (
          Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
       2, 0}}, {{2, 0}, {0.6180339887498949, 
       1.902113032590307}, {-1.618033988749895, 
       1.1755705045849463`}, {-1.618033988749895, -1.1755705045849463`}, {
       0.6180339887498949, -1.902113032590307}, {2, 0}}]], 
    PointBox[{0, 0}]}]\)

p = PravilniNKotnik[5, 2, Pi];

Zavrti[p__PravilniNKotnik] := Manipulate[Graphics[{
    	Line[
     		Table[{p[[2]] * Cos[((2*Pi * i) / p[[1]]) + fi],
       		 p[[2]] * Sin[((2*Pi * i) / p[[1]]) + fi]}, {i, 0, p[[1]]}]]}], 
  			{fi, 0, p[[3]]}]

Zavrti[p]

Manipulate[Graphics[
   {Line[Table[{PravilniNKotnik[5, 2, Pi][[2]]*
        Cos[((2*Pi)*i)/PravilniNKotnik[5, 2, Pi][[1]] + fi], 
       PravilniNKotnik[5, 2, Pi][[2]]*
        Sin[((2*Pi)*i)/PravilniNKotnik[5, 2, Pi][[1]] + fi]}, 
      {i, 0, PravilniNKotnik[5, 2, Pi][[1]]}]]}], 
  {{fi, 3.141592653589793}, 0, Pi}]

4.                                                                                                                                       
Sestavi funkcijo Presek[m_Mnogokotnik, d_Daljica], ki izračuna presečišča mnogokotnika in
daljice. Pri tem uporabi že napisane funkcije ter pazi, da rezultat ne istih presečišč večkrat. Poskusi
uporabiti vgrajeni funkciji Select in DeleteDuplicates. Pomagaj si z naslednjimi primeri. Funkcijo
lahko definiramo tudi na naslednji način (namesto argumenta damo znak #, na koncu definicije pa
dodamo znak &.

aliJePrazen = Length[#] > 0 &

Primer uporabe:

aliJePrazen[{}]
False

aliJePrazen[{1, 2, 3}]
True

Potem jo pa lahko uporabimo kot preizkusno funkcijo za filtriranje neustreznih praznih seznamov:
Select[{{1, 2}, {}, {3, 4}, {}}, aliJePrazen]
{{1, 2}, {3, 4}}

ClearAll[d, d1, m1, m, seznamDaljic, Daljice]

In[27]:= Presek[Daljica[AA_, BB_], Daljica[CC_, DD_]] := Module[{resitev},
  resitev = 
   Solve[{AA + r (BB - AA) == CC + s (DD - CC), r >= 0, r <= 1, s >= 0, 
     s <= 1}, {r, s}];
  If[resitev == {},
   {},
   First[AA + r (BB - AA) /. resitev]
   ]
  ]

In[28]:= d1 = Daljica[{-1, 1}, {3, -1}];
m1 = Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}];
m = Append[m1, m1[[1]]]
seznamDaljic = Map[Daljica, Daljice[m]]
Daljice[Mnogokotnik[t__]] := Partition[{t}, 2, 1]
Daljice[m]
Daljice1 = Partition[Flatten[Daljice[m]], 2, 2]

Out[30]= Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}, {0, 0}]

Out[31]= Daljice[Daljica[Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}, {0, 0}]]]

Out[33]= {{{0, 0}, {1, 1}}, {{1, 1}, {0, 3}}, {{0, 3}, {-1, 2}}, {{-1, 2}, {0, 0}}}

Out[34]= {{0, 0}, {1, 1}, {1, 1}, {0, 3}, {0, 3}, {-1, 2}, {-1, 2}, {0, 0}}

In[35]:= PresekBrezSeznama = Presek1[m__Mnogokotnik, d__Daljica] :=  
  	For[i = 1, i <= Length[Daljice[m]], i++, 
   Print[Presek[Daljica[Daljice[m][[i]][[1]], Daljice[m][[i]][[2]]], d]]]

In[36]:= Presek1[m, d1]

During evaluation of In[36]:= {1/3,1/3}

During evaluation of In[36]:= {}

During evaluation of In[36]:= {}

During evaluation of In[36]:= {-(1/3),2/3}



In[46]:= PresekVSeznamu = {Presek1[m, d1]}

During evaluation of In[46]:= {1/3,1/3}

During evaluation of In[46]:= {}

During evaluation of In[46]:= {}

During evaluation of In[46]:= {-(1/3),2/3}

In[47]:= {Null}
PresekVSez = List[Presek[m, d1]]

Out[47]= {Null}

Out[48]= {Presek[Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}, {0, 0}], 
  Daljica[{-1, 1}, {3, -1}]]}

(*Kako se da presek v seznam? *)

In[51]:= aliJePrazen = Length[#] > 0 &;

In[54]:= aliJePrazen[{}]

Out[54]= False

In[55]:= aliJePrazen[{1, 2, 3}]

Out[55]= True

In[56]:= Select[{{1, 2}, {}, {3, 4}, {}}, aliJePrazen]

Out[56]= {{1, 2}, {3, 4}}

In[59]:= Select[{{1/3, 1/3}, {}, {}, {-(1/3), 2/3}},  aliJePrazen]

Out[59]= {{1/3, 1/3}, {-(1/3), 2/3}}

In[60]:= DeleteDuplicates[{{1/3, 1/3}, {}, {}, {-(1/3), 2/3}}]

Out[60]= {{1/3, 1/3}, {}, {-(1/3), 2/3}}

5.                                                                                                                   
5.Spodnja funkcija izračuna (uporabi) funkcijo f na vseh parih iz dveh seznamov.

VsiPari[f_, sez1_, sez2_] := Flatten[Outer[f, sez1, sez2], 1]

VsiPari[f, {1, 2, 3}, {a, b}]
{f[1, a], f[1, b], f[2, a], f[2, b], f[3, a], f[3, b]}

	\[Bullet]Preuči, kaj točno naredita funkciji Outer in Flatten. Poglej v pomoč in preizkusi na primerih.
	
	\[Bullet]Sestavi funkcijo Presek[m1_Mnogokotnik, m2_Mnogokotnik], ki poišče presek dveh pravokotnikov. Uporabi funkcijo VsiPari.


VsiPari[f_, sez1_, sez2_] := Flatten[Outer[f, sez1, sez2], 1]

VsiPari[f, {1, 2, 3}, {a, b}]

{f[1, a], f[1, b], f[2, a], f[2, b], f[3, a], f[3, b]}

In[62]:= Outer
Flatten
x = List[{0, 1, 3}, {2, 3, 4}, {7, 1}]
KajNarediFlatten = Flatten[x]
KajNarediOuter = Outer[f, x, x]

Out[62]= Outer

Out[63]= Flatten

Out[64]= {{0, 1, 3}, {2, 3, 4}, {7, 1}}

Out[65]= {0, 1, 3, 2, 3, 4, 7, 1}

Out[66]= {{{{f[0, 0], f[0, 1], f[0, 3]}, {f[0, 2], f[0, 3], f[0, 4]}, {f[0, 7], 
    f[0, 1]}}, {{f[1, 0], f[1, 1], f[1, 3]}, {f[1, 2], f[1, 3], 
    f[1, 4]}, {f[1, 7], f[1, 1]}}, {{f[3, 0], f[3, 1], f[3, 3]}, {f[3, 2], 
    f[3, 3], f[3, 4]}, {f[3, 7], f[3, 1]}}}, {{{f[2, 0], f[2, 1], 
    f[2, 3]}, {f[2, 2], f[2, 3], f[2, 4]}, {f[2, 7], f[2, 1]}}, {{f[3, 0], 
    f[3, 1], f[3, 3]}, {f[3, 2], f[3, 3], f[3, 4]}, {f[3, 7], 
    f[3, 1]}}, {{f[4, 0], f[4, 1], f[4, 3]}, {f[4, 2], f[4, 3], 
    f[4, 4]}, {f[4, 7], f[4, 1]}}}, {{{f[7, 0], f[7, 1], f[7, 3]}, {f[7, 2], 
    f[7, 3], f[7, 4]}, {f[7, 7], f[7, 1]}}, {{f[1, 0], f[1, 1], 
    f[1, 3]}, {f[1, 2], f[1, 3], f[1, 4]}, {f[1, 7], f[1, 1]}}}}

In[161]:= y = List[{1, 2}, {3, 5}]

Out[161]= {{1, 2}, {3, 5}}

In[162]:= Flatten[y]

Out[162]= {1, 2, 3, 5}

In[163]:= Outer[f, y, y]

Out[163]= {{{{f[1, 1], f[1, 2]}, {f[1, 3], f[1, 5]}}, {{f[2, 1], f[2, 2]}, {f[2, 3], 
    f[2, 5]}}}, {{{f[3, 1], f[3, 2]}, {f[3, 3], f[3, 5]}}, {{f[5, 1], 
    f[5, 2]}, {f[5, 3], f[5, 5]}}}}

Flattern vzame gnezden seznam in vsak element zapiše v nov seznam, ki ni gnezden.
Outer naredi seznam vseh možnosti vgnezdenih seznamov, pri čemer je prvi element funkcija oziroma operator, druga dva elementa pa sta seznama.



In[174]:= m1 = Mnogokotnik[{0, 0}, {1, 1}, {0, 3}, {-1, 2}];

In[176]:= m2 = Mnogokotnik[{0, 1}, {2, 0}, {3, 1}, {1, 4}];

In[184]:= Presek[m1_Mnogokotnik, m2_Mnogokotnik] :=
 For[j = 1, j <= Length[Daljice[m2]], j++, 
  For[i = 1, i < Length[Daljice[m1]], i++,
   Print[Presek[Daljica[Daljice[m1][[i]][[1]], Daljice[m1][[i]][[2]]],
      Daljica[Daljice[m2][[i]][[1]], Daljice[m2][[i]][[2]]]]]]]

Presek[m1, m2]

During evaluation of In[184]:= {2/3,2/3}

During evaluation of In[184]:= {}

During evaluation of In[184]:= {2/3,2/3}

During evaluation of In[184]:= {}

During evaluation of In[184]:= {2/3,2/3}

During evaluation of In[184]:= {}



In[181]:= DeleteDuplicates[{{2/3, 2/3}, {}, {2/3, 2/3}, {}, {2/3, 2/3}, {}}]

Out[181]= {{2/3, 2/3}, {}}


6.                                                                                                                  
 Izberi eno izmed nalog iz snovi pri linearni algebri in jo reši. Opiši potek in čim več računskega dela prepusti Mathematici. Če je možno, rezultate predstavi še grafično.

Izračunaj vektorski produkt vektorjev e1 = (2,1,1) in e2=(3,3,0), njuno vsoto ter razliko.
Podani sta točki T1 = (1, 1, 1) in T2 = (1, 2, 3). Zapiši smerni vektor premice, ki gre skozi točki T1 in T2. Nariši vektorje od T1 do T2 in vektorja e1 in e2 v 3D prostoru.

ClearAll[x, y, z]

In[189]:= T1 = Tocka[1, 1, 1];
T2 = Tocka[1, 2, 3];
e1 = Vektor[2, 1, 1];
e2 = Vektor[3, 3, 0];

In[193]:= VektorskiProdukt[u_Vektor, v_Vektor] := Vektor @@ (List @@ u\[Cross]List @@ v)
VektorskiProdukt[e1, e2]

Out[194]= Vektor[-3, 3, 3]

In[204]:= Vsota[u_Vektor, v_Vektor] := Vektor @@ (List @@ u + List @@ v)
Veckratnik[t_, u_Vektor] := Vektor @@ (t List @@ u)
e3 = Vsota[e1, e2]

Out[206]= Vektor[5, 4, 1]

In[207]:= Razlika[u_Vektor, v_Vektor] := Vsota[u, Veckratnik[-1, v]]
e4  = Razlika[e1, e2]

Out[208]= Vektor[-1, -2, 1]

In[200]:= Tocka[u_Vektor] := Tocka @@ u

In[201]:= Vektor[A_Tocka, B_Tocka] := Razlika[Vektor @@ B, Vektor @@ A]
Vektor[T1, T2]

Out[202]= Vektor[0, 1, 2]

In[223]:= vektorji = {{List @@ T1, List @@ T2}, {List @@ T1, List @@ e1}, {List @@ T1, 
   List @@ e2}}

Out[223]= {{{1, 1, 1}, {1, 2, 3}}, {{1, 1, 1}, {2, 1, 1}}, {{1, 1, 1}, {3, 3, 0}}}

In[224]:= Graphics3D[Map[Line, vektorji ]]

Out[224]= \!\(\*
Graphics3DBox[{Line3DBox[{{1, 1, 1}, {1, 2, 3}}], 
    Line3DBox[{{1, 1, 1}, {2, 1, 1}}], Line3DBox[{{1, 1, 1}, {3, 3, 0}}]}]\)
